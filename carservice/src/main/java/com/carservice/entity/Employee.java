package com.mfc.to;
// Generated Nov 25, 2017 7:35:24 PM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "carservice")
public class Employee implements java.io.Serializable {

	private Integer employeeId;
	private Designation designation;
	private Status status;
	private Date dob;
	private Date doj;
	private String employeeName;
	private String guardianName;
	private String gender;
	private Set<EmployeePhone> employeePhones = new HashSet<EmployeePhone>(0);
	private Set<EmployeeRole> employeeRoles = new HashSet<EmployeeRole>(0);
	private Set<EmployeeEmail> employeeEmails = new HashSet<EmployeeEmail>(0);
	private Set<EmployeeAddress> employeeAddresses = new HashSet<EmployeeAddress>(0);
	private Set<Login> logins = new HashSet<Login>(0);

	public Employee() {
	}

	public Employee(Designation designation, Status status, Date dob, Date doj, String employeeName,
			String guardianName, String gender, Set<EmployeePhone> employeePhones, Set<EmployeeRole> employeeRoles,
			Set<EmployeeEmail> employeeEmails, Set<EmployeeAddress> employeeAddresses, Set<Login> logins) {
		this.designation = designation;
		this.status = status;
		this.dob = dob;
		this.doj = doj;
		this.employeeName = employeeName;
		this.guardianName = guardianName;
		this.gender = gender;
		this.employeePhones = employeePhones;
		this.employeeRoles = employeeRoles;
		this.employeeEmails = employeeEmails;
		this.employeeAddresses = employeeAddresses;
		this.logins = logins;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "EMPLOYEE_ID", unique = true, nullable = false)
	public Integer getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(Integer employeeId) {
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DESIGNATION_ID")
	public Designation getDesignation() {
		return this.designation;
	}

	public void setDesignation(Designation designation) {
		this.designation = designation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATUS_ID")
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DOB", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DOJ", length = 10)
	public Date getDoj() {
		return this.doj;
	}

	public void setDoj(Date doj) {
		this.doj = doj;
	}

	@Column(name = "EMPLOYEE_NAME", length = 30)
	public String getEmployeeName() {
		return this.employeeName;
	}

	public void setEmployeeName(String employeeName) {
		this.employeeName = employeeName;
	}

	@Column(name = "GUARDIAN_NAME", length = 30)
	public String getGuardianName() {
		return this.guardianName;
	}

	public void setGuardianName(String guardianName) {
		this.guardianName = guardianName;
	}

	@Column(name = "GENDER", length = 10)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<EmployeePhone> getEmployeePhones() {
		return this.employeePhones;
	}

	public void setEmployeePhones(Set<EmployeePhone> employeePhones) {
		this.employeePhones = employeePhones;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<EmployeeRole> getEmployeeRoles() {
		return this.employeeRoles;
	}

	public void setEmployeeRoles(Set<EmployeeRole> employeeRoles) {
		this.employeeRoles = employeeRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<EmployeeEmail> getEmployeeEmails() {
		return this.employeeEmails;
	}

	public void setEmployeeEmails(Set<EmployeeEmail> employeeEmails) {
		this.employeeEmails = employeeEmails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<EmployeeAddress> getEmployeeAddresses() {
		return this.employeeAddresses;
	}

	public void setEmployeeAddresses(Set<EmployeeAddress> employeeAddresses) {
		this.employeeAddresses = employeeAddresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Login> getLogins() {
		return this.logins;
	}

	public void setLogins(Set<Login> logins) {
		this.logins = logins;
	}

}
