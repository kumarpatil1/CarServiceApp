package com.mfc.to;
// Generated Nov 25, 2017 7:35:24 PM by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EmailType generated by hbm2java
 */
@Entity
@Table(name = "email_type", catalog = "carservice")
public class EmailType implements java.io.Serializable {

	private Integer emailTypeId;
	private String emailTypeName;
	private Set<CustomerEmail> customerEmails = new HashSet<CustomerEmail>(0);
	private Set<EmployeeEmail> employeeEmails = new HashSet<EmployeeEmail>(0);

	public EmailType() {
	}

	public EmailType(String emailTypeName, Set<CustomerEmail> customerEmails, Set<EmployeeEmail> employeeEmails) {
		this.emailTypeName = emailTypeName;
		this.customerEmails = customerEmails;
		this.employeeEmails = employeeEmails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "EMAIL_TYPE_ID", unique = true, nullable = false)
	public Integer getEmailTypeId() {
		return this.emailTypeId;
	}

	public void setEmailTypeId(Integer emailTypeId) {
		this.emailTypeId = emailTypeId;
	}

	@Column(name = "EMAIL_TYPE_NAME", length = 100)
	public String getEmailTypeName() {
		return this.emailTypeName;
	}

	public void setEmailTypeName(String emailTypeName) {
		this.emailTypeName = emailTypeName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "emailType")
	public Set<CustomerEmail> getCustomerEmails() {
		return this.customerEmails;
	}

	public void setCustomerEmails(Set<CustomerEmail> customerEmails) {
		this.customerEmails = customerEmails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "emailType")
	public Set<EmployeeEmail> getEmployeeEmails() {
		return this.employeeEmails;
	}

	public void setEmployeeEmails(Set<EmployeeEmail> employeeEmails) {
		this.employeeEmails = employeeEmails;
	}

}
